"""
Text2Excel is a GUI desktop application that can extract data from a text file 
and put them in an Excel or CSV file using regular expression (regex) patterns.

This is the embedded version of the program.
The icon image is embedded as binary data inside the code,
so no external icon file is required at runtime.

version 2.5.0

https://github.com/AmirAli104/Text2Excel
"""

ICON_BYTES = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00@\x00\x00\x00@\x08\x06\x00\x00\x00\xaaiq\xde\x00\x00\x0f6IDATx\x9c\xedZ\t\x90V\xd5\x95\xfe\xee[\xfe\xf7\xaf\xbd\xd0\x0b\r\xf4f\xd3l\r\xb2\x86eP\xe2\xc2(RQ*\x19F\x93hf\x86X0\x12\xe3\x84)\xd1\xc8\xa4L\x10\x19\xc9\xa8\xa3\xc6*\xc72.$\xd1BK\x99)\x05\xe36\x83\x1a\xa3\x11\x15W&F3,\x99\xb6\xa1\xe9\x8d\xee\xa6\xfb_\xdfv\xa7\xce}\xef\xfd[\xff\xbd\x804\xa4j\xfaT\xdf\xfe\xdf{\xf7\xbe{\xef9\xf7\xdcs\xbes\xee\x03\xc6h\x8c\xc6h\x8c\xc6\xe8\xff/\xb1?\xa318\xce\x02\xb1\xa1*\x17,X\x10<\xda\xd2r]R7/5\x0c#\x0c\xc0.<az,e\xfd\x8a~\x19\xc0\x15\xdb\xe6Z\xa1a%\t\xb0\xdd\xde\x14Eb\x9a\xa6\x1d)\r\x05o9\xd0\xdc\xfc\x19\xfe\x1c\x04\xd0\xd4\xd4\x14\xeeho\xfbw\xdd0WL\x9cP\x8e\xa2PPp\xcc\xb3\xdf\x1al\xcd\xa8\x9e\xd3\x8f{\xe15\xf7n\x99\xd7\x05\x03c\x0c\x1d\x9d=8\xd1\x1f\x87\xaa\xc8\x87\x8a\x8a\x8aV\x1d<x\xf0\x0f8\xdb\x02\xa8\xa8\xa8\xb89\xa5\xebwmX\xbb\x1a\xeb\xae\xf9\x1a|>\x05\x9c\xbb\xcc\xb8L\xa49\xcd\xa7t\xfd\xf0\xc3\xf9\xfd>\xfch\xdbv<\xbe\xf3%\xf8|>\xc8\x92r\xb0\xb4\xb4x\xd5\x81\x03\x07\xce\x88&H\x83U$S\xc9\xcb\xeb\xaa\xc7\xe3\xfbkV\xa1\xb4(\x00M\x95\xe1\xf7)\xa2\x044\xd5\xbd\x96\x11\xa0{\xf7\xb9\xa8\x13\xf5\x99\xfb\x9c\xe7\xa2\xbdS\xe8]\xbf&\x8b\xb6\xb4\x1dB\x01?\xae_\xf3u\xc8\n\x1a\xbb\xbb\xbbwO\xa9\xab\x9bq\xd6\x04\xc09)+\x8f\x04\x03~H\x92\x04\xd3\xb2\xc5\xea\xa7\x0b2\xd7\xb6[\x06\xbb\xcf\x7f\x9eSo\xbb\x85s\x98\x96\x85\xbf[\xbd\x1c\xdb6\xfd=M\xa1\xb1;\x1a\xdd5\xad\xbe~\xdaY\x11\xc0m\xb7\xddF\xbb\x94{\x13- \xa0\xd3>\x11\xea2\x91J\xe1oV_\x84\x7f\xde\xb4\x96D<\xa5\xe3D\xdf\xae\x86I\x93\xa6\xe0,\x08\x80\x83\x11\x9fi\xb3\x97yAb_\xbe\xb0\xc2\xa6\x87FJ\xa6RXs\xe5\xc5\xb8\xe3\x96u`\x8cO\xeb\x89\xc7wO\xae\xaen\x1c\x1d\xf6\x01\xa5\xd0CI\x92x(\x122\xbc{\x9a/\t\x831\t\xb1\x84\x0e\xdbv\x85"\x18\xe1\x03\xed\xa0g \xf35\xc5m\xae\xc8\x12\x02\x9a\x0f6w\xfc \xf5GU\x92\xdb \x91\xd4\xb1\xe6\xaa\xe5\xb0l\x1b\xb7\xfe\xcb\xa3\xd3\xbbc\xb1]55\x15\xabZZ:\x0f\x9d\x11\x01\x1010\x8b~\x1d\x1e\x184M\xc33\xcf\xff\x16\xb7\xdf\xf38\x14U\xc6p4\x88\x7f\x10\xfd\xf9T\x19\x0f\xdf\xb5\x11s\x9a\xce\x11\xcf\xcaK#H\xe9&\xfa\x13)\xc8ds`\x0bM\xb8\xf6\x9b\x97\xc0\xb2ll\xbe{{S\x7f\xd4\xdc]SS\xb3\xaa\xa5\xa5\xe5\xd0\x19\x11\x00\\\xb7-\x16\x93\x0c\x97m\xa3\xaar\x1c\xa6M\xa9\x15F\xcc\xf1\xf1\xa22\x8b\xddl\xd5\xceb?K\xe5\xb9m#\x1c\n \x12\t\x08\xad"\x06/X:\x0f\xf7\xfc|\'\xb6?\xf9\x12\xee\xdd\xb2\x1e\x81\x80&\x8c#c\x1c\xffp\xed\x15\x08\xf8U\xfc\xe4\xee_4\xc5\xa3\xf1\xdd\x95\x95\x95Wttt\x1c>\x03\x02`9\xac\x18\x86\x89\xf3\x164\xe1\xfc\x8533\x9a\xed\xf2\\\xc8\xed\x93\xa7\xc8\xc0\x9d\xec\n\x0e&I\xb0,SX~X\x16\x16\xcd\x9d\x8a\xef\xac\xbe\x04\xdb\x9f|\x01m\x1d\xc7\xb1b\xf9b\x04}\xaa\xc0\x95\x04\x94|\x9a\x8a\xb9\xb3\x1a\xb1w\xdf\xa7M\x92\x8d\xa7\x1a\x1a\x1a.=|\xf8\xf0\x89Q\x16\x80K\xe9\xd93\x98\x96\tX\x99\xb5\':\x19\x7f\xe0\xbc\xc7\x01+\xf7=\xcem\xdc\xfe\xc35()\nc\xc7\xb3{\xb0\xe7\xcd\x0f\xf3\xde\xe4\xd0\x08$\xc9\x12l\xb0E\xd1h\xefB\x00{0\x9a\x02\xb0\x07\xb8:.0\x01!\xc2\x82D\xd0\xd7\x95L\xfaU\x17\xf2\x8a\xfb<\xa9\xa5t#\xedNi{\x11\xb8\xda\xbc\xf1;X{\xf5eh>\xda\x89\x94a\xe5\xbc\xe2SU\xbc\xf9\xee~\xdc\xff\xe8NH>yx#tZ4\x80e.\x89\xf9\xb6\x8e^\xbc\xf1\xee~\xc7\x0b\x08\xe6\xbc5\xcd\x08\x8b\x9ey\xf7\xb9\xba\xe2\xb4#\x9eC\x01\r\x7fy\xfe\\\x04i\xafg\tA\xd7\xc9\xce\x94\xa2\xba\xaa\x0c\xdc\x95\xa6\xd7\x83_\xf3\xa1\xab\xa7\xc7\x19\xdbb|\xd4\x05 \x89\xe9g\x18\xd0|*^|\xfd=\xdc\xf8\xe3\xfb!\xc9\xaa\xd8\x9b\xb9\xb3(\xcct>\x11\xbf\x8a\xc2\xb0\xeb\x97w`\xd9\xe2Y\xd0\xf5\xb4\xb7\x15DF\x91J>\xd1x\xa6i\xe5\x08\xfb\xcc\xd8\x00\x97R)\x1d__\xb1\x14\x95\xe5%\xb0L;\xa3\xee\x05\x82\xc3\xa1D@[\xab(\x14\xc0\xbcY\x93\x85a=irL\xc8\x99\x17\x80\xcd9\xc6\x95\x84\xf0W\x97-\xfd\xd2\x83\x92\xda\xeb\x86\xf9e \xf5\xe8o\x01\xbb\xc0\x18\x96\xcd\x05@9\xed\x89\xa4!\xdc\xe9h\x93r2\x8de\x06h\x9a_\\\x93\x15\'\xc3u:\x88\x0c\x1c\x93\x18\x0c\xd3\x84iX\x83K!\xfd\xfc\x14\xb6\xce)\x18A\x9e}O\x10\xf5H{7\x9e}\xe9wb\xef^y\xc5WQ3\xa1\xac\xa0\xc1\x1a)\x91\x1d1M\x1b\x0f\xedx\x19\xdd\xbd}\xb8\xe8\xbc9X8\xbbQ\x18\xbb3\x955T\x06\xab\xb0\xf3VAQ$\xfcoK;n\xfb\xd7\xed\x98\xdd4\x19+/^$\xa2:&\xcb\x02\xa0x1}:P*4\x98,g\xa3b\xb1\xa2\xbaa\xe3\xfd\x8f?\xc3S\xcf\xbd\n\xdb\xfa6\x96\xce\x9f>\xb8\x00N\xbf\x02\xa0\xb0\x00\xc88\x15\xe0Cb\x12\xfc>\r[n\xfa.f\xcf\xa8\x13\xeaz\xa4\xed\xb8\x10\x8c\xa2*\x98\xd1X\x8d\xe2p\xd0\x81\xb8\x03\xba\xe48\xdc\xd2&\xb6\x0e\xf5C\x03P\n\xacnR9~\xfa\xa3ux\xeb\xbd\xff\x1e\x10<\xe6\xe3\n\xe7\x1e\xf0\x87\xfd\x1c}}\x18E\r`b\xce"\\u0O\xc6Pq\x8ed"\x05UQ\xb0\xfb?\xdf\xc1?\xde\xfa\x80\x88\xe4L\xdb\xc2\x9c\xa6\xc9x\xec\xbe\x9bPU^\x92\xd6\x04\x11P1 \x960q\xdd\x0f\xef\xc3\xe1\xe6V\x11\n\'\x12:jk\'\xe0\xc5\'\xee\x80\xcd\x1dll\x9a\xa6;\x0c\x83\xea\xa3T\x99\x9b\xae\xe0@\xc0\xef\x83OU\x04\x1e(--I\xb4\xb6v\x8c\xa6\x00\xb8\x98\xfb\x00PC\x9c0\x06\xcb&\x98\xcap\xe4X\'fN\xaf\xc3\xb6\x7f\xba\x0e\x1f\x7fz\x10\xd7o\xba\x0f\xaf\xbc\xfe\x01\xd6^\xbd\x02\xfd\xb1\xa4\xd0$\xea\x89\xe2\x7f\x9fO\xc6\xfd[\x7f\x00\x89\x01{\xde\xfa\x10?\xb9\xf31|\xe3\xdce\x08\xfa}\x88\'\x92\xe9\xadA\xb6\x86\x1a\xfd\xe6\xed\xfd\xf8\xe0\x93?"\x16\xa7:&\xb6\xe0\xe7\x87\x8eB\x92dtu\xf4\\?\xbe\xacl%gLb\x9c\xf1tZ\xc73G\xe2^\xa2h\x92ABL\x96\xd9\xde\xd6\xd6\xf6\xd7\ni\x982\x98dh\xa2Y\xe1\x8b\xc3\xb8\xe9\x8c\xa0(\x8a\xb0\xd8W^~\x01"\xe10\x9e{\xe5-\xb4\x1c\xe9\x80_S\x91L\xe9\xe8\xe8\xea\xc3\xb7\xbe\xb7\x15\xfd\xd18t\xdd\xc45\xab\x97\xe3\xe6\xf5Wa^S\x1d\x0e\xb5t\xe0\xb1\x1d/\xe0\xe2\xf3\xe7a\xcb\xcd\xdf\x05\x87\rE\x91\xc5\x8a+\xb2"\xb4i\xe3\x96\x9f\xe3\xe9g_\x05\xe9\x83,\xcb".\'\xcd#AR;\x83\xd9W3rI\xe9D\xbd\x93^\x17\x8c\xa7Q\x19y\x13\t\xdc\xb2a\xa48\xc6W\x8e\xbf\xff\xba\xf5\xebo\xdc\xb2e\x8b=\xac\x00x\xd6O\xa1(\x9f\xb9\x98\xe0\x07\xb7>\x80}\x1f}\x8e\x1b\xd6\xaeF\xf5\xa4J\xf1\xac\xa48,\xb0\xfe\xd7\x96/A<\x99\x12^b\xf6\x8c\x06\xf1n\xf7\x89\x04\xae\xdf\xf43\xc1\xf0\x03\xdb6\xa08\xec\x87n\x18.|f\x08\x06\xfdx\xe8\x89\xe7\xf1\xc43\xaf`\xdc\xfc\x89\x08\xcd\xaa\x04\x13\x06\x96PIfV\xac\xa0\x9d\xf0r\x95yy\x08\xc3F\xe2\x93.\xe8\xcd\xd1\r\x8f<\xf2\xd0^\x00O\x8fH\x03\xe0\xb2_(\xb3C>\x9b\x0e2\xde\xfd\xe83,\x9c;\r\xb7|\xff*<\xbes\x8fp\x8f\xc9d\n\xe1\xa0\x86\x9b\xd6\xff\xb57;X\xa6%4f\xeb\xcf\x9e\xc0{\x1f~\x86\x07\xef\xbc\x11>EAK[\x17*K\x8b`\x08\xfco!\x9a\xd0\xb1\xe77\xef#0!\x82\xe2e5`\x9a\x04a\x86r\x12\x10\x8e\x8d\xce(h\xe6\xf8E\xb4\xf3*=yI\x0c\xe1\xf0D\xf4t\x1e\x84\x910\xd6q\xce\x9fa\x94i\x19V\x00.\x15Bg\xc2\x10\x15\x87\xb0t\xe1L\xbc\xfc\xda>\xcc\xbft\xbdX\x83\xf2\xb2b\xdc\xfd\xe03\xf8\xea\xe2s\xd1P[\x95\xf6\x06\xaa"\xe3P\xf31\xec\xf8\x8f\xff\x12\x86\xed\xc7w>\nC7PR\x12\xc1\xf3\xbf\xda&\xd2m\xb4\xbd\x0c\xd3B2eB)\xf2\x81\xab\x0c\xdc\xc8\xa8x\xe6\xc4\x8d\xf2\xd5Y\xda\x90Vy\x97q\xf7\x01e\x9e\xbc\xe7\\c\x80_\x86\x155\xca\x99\xd8+\x18\xa9\x00X\x9e\xfaS\x1e\xdfFk{\xb7X\xed{7\x7f\x0f+/Z"\xe0\xf1\xf2e\xf3\xd1\xde\xd9\x83O\xff\xa7\x19\xa5\xc5\x91\x1c\x94H\xe7\n\x14D=r\xcfF\xc1\xa8\x97n\xf7\xf9T\x14E\x828\xf4E\x87\xd8\n\x9e\x91u\xdc\r\xfd\xba}\xd0\xd9A\xd4p\xf5\x11\x90B* q\x90\x8d\xf3\xe6%\xfe\xfa\r\x91J#\x0c\xc7\x82\x8ag\xc8D7\xa2728#\x8f\x05\x88\x9c\x9d\xe7*\x9e\x002tXr\xd7\xbf=\x89\xf9\xe76b\xf6\xf4z\\\xf3\x8d\x0bE-\xa9xM\xd58,\x99;\x15I\x82\xc9Y&\x97\x98\r\x07\xfd\xb8|\xf9\xa2\x1c\xc3J\xbc\xf6\xf5\xa5p\xcb\xd6\x07\x11\x8d%\x84{\xccz\xcb\xf9\x91\x18\xacx\n\xbd\xbf>\x0c$-\xc1\x85\x7ff9"\xe7M\x04\xb7\xdc\xc4\x9b$!\xb6\xaf\r\xc9O\x8f\x0b\x01(e~D.\xab\x03\n\xa7M\xd8\x08\xa1p.\x915\x9f3\xa3\x1e/\xec\xf8\xa9\x90N]u\xf9\x80\x88\x8e\x14\x9e\xd4\xb8\x10\t\xfc\x902\x06\xccEU\x19\xee\xbb\xfd\x06\x18\x86\x85H8\x88_\xbf\xfcVz\x8a"\x15o\x03J\xc4\x87\xe0\x8cr\xc4\xde9&\xecO\xf2\xf7\xc7\xe1\xab\x8d@\xab\x89\x08A\xe9_\xf4#\xb9\xbfK\xb4\xe5\x92\x8d\xe0\xfcJ\xc0G\xc7\xcfb\xbf8%k*\xc3\n\x809\xd1`\x96#t\xfa\xa2\x15\x9a\xd9X#\xee\r\xcb:\xc5p6;{@\x99_`j\xfdD\xc82C_,\xe5\xf4\xe9\x19\xb7\xf4~\x06Bs\xca\xa1\x1f\xeb\x87\xd5\x1c\x15zI\xc2P\xc7\x07E]l\xef1\xc1<\x81/\xff\xecr(\xb5\x11\xf0\x9c\x85\xc8Jl\x8e\\\x03X\x8e\xc3\x11\xd6 -I\x0eU\x1e\xf4\\u\xc4D\xbdQ0D\xc9V\x9b3\xd8.\xc0\xca\x16\xab#\x03\x0e\xae0D\x96L\x12\xd6\x9c%9\xac\x8e\x04\x12\x7f8\x0e\xe8\x1cVWBl\x15\xb9"\x80\xe0\xbc\xca\xcc\x87\x07\x05G<)\x1b\x90!\xc6l\xa4t\x1b\x07\x8e\x1e\x83%\xce\x05\x1c*\xa4\x03\x85N\t\xf2\x89V\x9a\x80S\xed\xc4\xf2\xf4Jg\xbf\x9fi\xe7\n\xc1\xe2\x90+\xfc\x08\xcd\xab@\xf4\xed6H\xb2\x84\xc4\xfb\xed\xcefU$\xb1\xdfC\x7fQ\x05h\x12\x81\x94Ac\x89|R\nN.\xfd?\x93\x16\xa1\xb4\xf4\xd3\xcf\xbf\x8a\r\xb7> 0ynN,+x\xcab\xc6\xc9\x08g\x12\xa8\xd9\'\x05\x04n4M\xc5\xb3\xbf\xd8\x8a\xb9M\r\x02+\x0c&2:\xac\x169H\xd3Fpf%\xf4\xa3q\x98\xcd\xfdn\x8a\xde\xd9J\x81y\xe3\xa1N\n\x8b6\xd9@`\xb8\x1c\xa22R7H\xc6m\xe1\x9ci\xd8\xb0n\xb5@w\x19U\x1dL\x072u\x99\x15\xf6D@\xean\xa38\x12BuU\xb9\x00A\xc3M\xd69\x96\x87\xc0\x07\xe1\x05\x95\xe8m\x8d\x81\x91{$;\xa2J\xd0\xce)\xce\xb8\x16q\x8e\xc9N\x83\x00X\x86\x17b\xba\xb1~\x02\xb6l\xfc[\x9c.\xa2\xc9\xe9)\xca,q\'\xb70\xcc\x91\x8bW\xaf\xb7\xc6\x85\x0b\xf40\r\xd7m\xc4>\xea@\xd1\x85\xb5\x8e@H[\\\x03\x9d\xdb\';I\x01\xf0\xdcy\x90\x10\x12\x16\xe5\x04G\x87\x06\x1c\xa7\xe5\xd9\x06.K0\x8fE\x11\xfb\xa8=\xa3\xe4\x0e\x10\x80~\xa0\x07\xa9\xdab\xf8\xa6\x14\t\xfc?\xb0\xdf\xc2\xa4\x14z8\xd8\xe9\xbd\xccd\xe7d\xa8\xd0Be\x03\xcc|\x8d/\xd4\xd65p\xd9\'D\xb9/\xe5E!dG\x92&\xfa\xdf>\n\xa4\xc8\x053\x04g\x97\xc3\x8a\xebH\x1d\xec\x15^ \xba\xaf\x15%\x13\x82`\x01\xd9A\x8fi\x97\x9a\x1bK\x0c+\x00^@\x1a\x14\x87\x1fm\xef\xc6\xebo\x7fR0s38\r\x0c\xa7HEI\xed\x83\x01\x1fV\\8_|\x1f\xe4\xb4\xcc[qo \n\x05$\x19\xfd\x1f\x1c\x83\xd9\x16\x17\xd7(U\x11\xf8J\x05\xac\xb8\x89\xd4\x91~0\xdd\x86\xd5\x93B\xec\xfdv\x84\x97M\x1c1FQ\x06\x9b\xb2\xf3\xb1B&\xfc\xa4\x95\x7f\xedw\x1f\xe3\x86M\xf7BR\xd4\\hq\n$@\x8b\xa6\xe2\x95\xa7\xee\xc2\xfcY\x93\x87\xcc\x03\x12\xfaK\xfd\xa9\x17\x89\xdfw\t\xf7G\x1e$\xb2\xa8\nRP\x85\x14P\x11h*C\xec\xc3v!\x98\xe4\xe7\xc7\xa1\xd5\x17A\xa9\t\t\xd7\xe9L\x91\x9d\x92\r`\xde\x7f\xea&\x952p\xc5%KPU\xb1\x05\x06\x9d\x0c\xb9{k\xe0QX\xfeYQ\x96:g)\x03\xc5\n\xc5\x910\xa67V\x8b8b\xe09\xa27\x0b\x06\xeb\x84\x8e\xfe7\x8f\x00:\x05R\x80\x7f\xd68h\r%"\xd9A\xaf\x05\xe7T \xf9\xa7^X\xc7\x93\x02\xc0D\xf7\xb6\xa2\xa4\xacAD\x80b\x96C(\x832\x0c\xfb\xe9\x97I\xa5\x8a\xc3\x01\xac\xbchq\xbem\x1a\x9a\x86@D\xd4g\xca \x1b\xe0z\xaf\xf4\xe76\x19\xeb+\xce\x0b\xba\xe2\x90\xcb\x02P+\x83\xe0\x8a\x84\xd0W\xaa\xd2\xf0CDz~\x19\xe1\xc5\x13\x90\xf8c\xb7H\xa0\x90\x94\xcc\x13I(\x81`\x1e\xa2;\t\r\xb09w\xb2L^H\xe9\xaeZJ\xd71Z\x94\x8d-\x9c\xc3W.VY\xab/\x86\xd6P\xe4\xe8\x1b\xb9K\nz\xdc\xa4\xab\x10\x9a\xc5\xa1\xd6GDIG\x9b\xa4\x1d\x1e&r\xfb\x1e\x98\xe4\xc4\xe0FP\x91\xa4h<\x91\x12\xb1<\x9d\xdc\x14Ju\xe7N\xbep?#V\x16\xe6|;\x14\x0c\xfa`\x1f7\x1d</1\x91\x7f\x10\xac\nmw\xbfQt\xd4\xc5\xcdU\xbac\tm\xc8\xf3\xdb^=\xb55E\xee\xb1\x8fsngCoi\xb0\xf9\xf8\xfd\xfe7\xbe8\xda\x81\x87w\xbc\x888}\x19fq\x91\xcc\xc8)V\xe6\xda,P\xbc\xe7\x94\xf2J?\xb7\xe8\x00e`[\xc3\xe0\xd04\x1f.X:\x07zg\x02\xf1\x8f;\xc5\x9e\xa7\x18\x9b>\xd7b&\x17\x05^\xa1\x15\xb6\xbck\x8a\xaa\xb8#$Zu\xf1\r\x01\x85\xd2\xe4g9\x12\xfb;\xc1b&\x19\xf2\x9d\xd9\xe90\x0c\xb5@\xe7\xd6\xd6\x96\xb6\xc6\xa2\xbbL\x8b/;\xa7\xa6\n\x91\xb0?\x13\x98\xb8\xae\xac\xa0\xfb\xf6(/Z\xca \xb3\x0c\\\xf5>\x9eN\xdbh\x89\xa1?\x9a\x10\x07-\xf4P.\xf2\x89\xb8>g\xcay\xb8\xc2C\xbf\xde\xbd\xb7u\xd2\xf5\xba-\xb2I\xaa\xa2<W\x7f\x8ez\xf5;\xef\x1cId\xf3\xc90\x04566\x16\xc5\xfa\xfa\xae\x8d\xeb\xfaJ\x06V\xealN\xf1Y<\xcd^d\xb6\x9c\r\x99\x96EF\xb9\xc4\x85\xf3I$\xa7\x83\xb6\x01Lx`=7\xc3)I\x8c\xf9T\x85\xda{\xa9\xbf\x11\xee"g\x05\xb8e\x89\xec\xb4gVeE\xeaUT\xf9\xb9\xa9S\xfd\x0f\xbf\xf1Fs\x12\xa7B\xcc\xc9\xcb3bG`\xf6Q*4FV\x91N\xa5l\xde\xbc\x99V(]\xf2C\xed1\x1a\xa31\x1a\xa31\x1a\xa31\x1a#\xb8\xf4\x7f\x89=\x9e\x8d:\x9c(\xe4\x00\x00\x00\x00IEND\xaeB`\x82'

__version__ = '2.5.0'

import tkinter as tk
from tkinter import ttk
import os

from utils import *
from gui.menu_commands import *
from gui.context_menu_displayers import *
from gui.context_menu_creators import *
from extractors import DataExtractor

# ----- the root window -----

window = tk.Tk()
window.title(APP_TITLE)
window.resizable(False,False)

main_frm = tk.Frame()
main_frm.grid(row=0,column=0, rowspan=3,sticky='nsew')

frm = tk.Frame(main_frm,borderwidth=10)
frm.pack(fill='both',expand=1)

# ----- App icon -----

icon = tk.PhotoImage(data=ICON_BYTES)
window.iconphoto(True,icon)

# ----- defining 'input file', 'output file' and 'sheet name' labels and entries -----

input_file_lbl = tk.Label(frm,text='Input file:')
output_file_lbl = tk.Label(frm,text='Output file:')
sheet_name_lbl = tk.Label(frm,text='Sheet name:')

input_file_entry = ttk.Entry(frm,width=30)
output_file_entry = ttk.Entry(frm,width=30)
sheet_name_entry = ttk.Entry(frm,width=15)

input_file_lbl.grid(row=2,column=0,sticky='w')
output_file_lbl.grid(row=2, column=3,sticky='w')
sheet_name_lbl.grid(row=4, column=3, sticky='w')

input_file_entry.grid(row=3,column=0,sticky='w')
output_file_entry.grid(row=3,column=3,sticky='w')
sheet_name_entry.grid(row=5, column=3, sticky='w')

# ----- 'log text' widget and its scrollbars -----

log_frm = tk.Frame(main_frm)
yscroll_log = tk.Scrollbar(log_frm)
xscroll_log = tk.Scrollbar(log_frm, orient='horizontal')
log_text = tk.Text(log_frm,width=23, height=10, font = 'TkTextFont', wrap = 'none', 
                   yscrollcommand=yscroll_log.set, xscrollcommand=xscroll_log.set,takefocus=True,
                   highlightcolor='black',highlightthickness=1)
yscroll_log.config(command=log_text.yview)
xscroll_log.config(command=log_text.xview)
log_text.insert('end', LOG_DEFAULT)
log_text.config(state='disabled')
log_text.grid(row=0,column=0)
xscroll_log.grid(row=1,column=0, pady=(0,10), sticky='we')
yscroll_log.grid(row=0,column=1, sticky='ns')
log_frm.pack()

exact_cb_substitute_lbl = tk.Label()
exact_var = tk.IntVar()
exact_cb = ttk.Checkbutton(text='Exact order', variable=exact_var)
exact_cb.grid(**EXACT_CB_GRID_ARGS)

# ----- 'put in columns' and 'put in rows' buttons -----

excel_var = tk.IntVar(value=True)
col_var = tk.IntVar(value=True)

column_row_frm = tk.Frame()
col_rb = ttk.Radiobutton(column_row_frm,text='Put in columns', variable=col_var, value=True)
row_rb = ttk.Radiobutton(column_row_frm,text='Put in rows', variable=col_var, value=False)
col_rb.pack(anchor='w')
row_rb.pack(anchor='w')
column_row_frm.grid(row=1,column=1, sticky='s')

# ----- patterns menu -----

patterns_list_frm = tk.Frame(bd = 10)
yscroll_pl = tk.Scrollbar(patterns_list_frm)
xscroll_pl = tk.Scrollbar(patterns_list_frm, orient='horizontal')
pattern_lbl = tk.Label(patterns_list_frm,text='Patterns:')
patterns_list = tk.Listbox(patterns_list_frm,width=25,height=13, yscrollcommand=yscroll_pl.set, 
                           xscrollcommand=xscroll_pl.set,selectmode='extended')
xscroll_pl.config(command=patterns_list.xview)
yscroll_pl.config(command=patterns_list.yview)
pattern_lbl.grid(row=0,column=0, sticky='w')
patterns_list.grid(row=1,column=0)
xscroll_pl.grid(row=2,column=0, sticky='we')
yscroll_pl.grid(row=1,column=1,sticky='ns')
patterns_list_frm.grid(row=2,column=1, sticky='s')

# ----- creating context menus for 'input file entry', 'output file entry',
# 'sheet name entry', 'log text' and 'patterns list' -----

create_commands_objects(None,log_text ,window, patterns_list, exact_var,
                            exact_cb, exact_cb_substitute_lbl, sheet_name_lbl,
                            sheet_name_entry, col_var, excel_var)

input_file_menu = MenuCreators.create_entry_menu(input_file_entry, excel_var, is_output_file_entry=False)
output_file_menu = MenuCreators.create_entry_menu(output_file_entry, excel_var)
sheet_name_menu = MenuCreators.create_entry_menu(sheet_name_entry, excel_var, False)
patterns_menu  = MenuCreators.create_patterns_menu()
log_menu = MenuCreators.create_log_menu()

CommandsObjects.log_menu_commands.log_menu = log_menu

# ----- context menu displayer functions for menus which defined in the last sections -----

context_menu_displayer = ContextMenuDisplayers(log_text, log_menu, patterns_menu, patterns_list, window, sheet_name_entry)

input_file_entry.bind('<Button-3>',lambda event : context_menu_displayer.show_entry_menu(input_file_menu,event))
input_file_entry.bind('<App>',lambda event : context_menu_displayer.show_entry_menu(input_file_menu,event,True))

output_file_entry.bind('<Button-3>',lambda event : context_menu_displayer.show_entry_menu(output_file_menu,event))
output_file_entry.bind('<App>',lambda event : context_menu_displayer.show_entry_menu(output_file_menu,event,True))

sheet_name_entry.bind('<Button-3>', lambda event : context_menu_displayer.show_entry_menu(sheet_name_menu,event))
sheet_name_entry.bind('<App>',lambda event : context_menu_displayer.show_entry_menu(sheet_name_menu,event,True))

patterns_list.bind('<Button-3>', context_menu_displayer.show_patterns_menu)
patterns_list.bind('<App>', lambda event : context_menu_displayer.show_patterns_menu(event, True))

log_text.bind('<Button-3>',lambda event : context_menu_displayer.show_log_menu(event))
log_text.bind('<App>',lambda event : context_menu_displayer.show_log_menu(event,True))

# ----- keyboard shortcuts for context menus options -----

window.bind_class('TEntry','<Control-C>',lambda event : event.widget.delete(0,'end'))

log_text.bind('<Control-c>', CommandsObjects.log_menu_commands.copy_log)
log_text.bind('<Control-d>', CommandsObjects.log_menu_commands.clear_log)

input_file_entry.bind('<Control-b>',lambda event  : browse_files(event.widget, True))
output_file_entry.bind('<Control-b>',lambda event : browse_files(event.widget, False))

patterns_list.bind('<Control-A>', CommandsObjects.patterns_menu_commands.add_pattern)
patterns_list.bind('<Control-i>', CommandsObjects.patterns_menu_commands.insert_pattern)
patterns_list.bind('<F2>', CommandsObjects.patterns_menu_commands.edit_selected)
patterns_list.bind('<Delete>', CommandsObjects.patterns_menu_commands.delete_selected)
patterns_list.bind('<Control-d>', CommandsObjects.patterns_menu_commands.delete_selected)
patterns_list.bind('<Control-c>', CommandsObjects.patterns_menu_commands.copy_pattern)
patterns_list.bind('<Control-D>', CommandsObjects.patterns_menu_commands.delete_all)
patterns_list.bind('<Control-C>',lambda event : CommandsObjects.patterns_menu_commands.copy_pattern(all=True))
patterns_list.bind('<Control-I>', CommandsObjects.patterns_menu_commands.import_from_file)
patterns_list.bind('<Control-e>', CommandsObjects.patterns_menu_commands.export_to_file)

# ----- setting command for 'put in rows' and 'put in columns' radio buttons -----

col_rb.config(command=CommandsObjects.csv_excel_switch_functions.show_exact_order_cb)
row_rb.config(command=CommandsObjects.csv_excel_switch_functions.hide_exact_order_cb)

# ----- The convert button -----

data_extractor = DataExtractor(excel_var, log_text, col_var, exact_var)

btn_convert = tk.Button(frm,text='convert',width=10,height=5,background='#0080e5', 
                        command=lambda : data_extractor.prepare_to_extract_data(output_file_entry.get(), 
                        input_file_entry.get(), sheet_name_entry.get(), patterns_list.get(0,'end')), cursor='hand2')

btn_convert.bind('<Enter>', lambda event : btn_convert.config(bg = '#0092ff'))
btn_convert.bind('<Leave>', lambda event : btn_convert.config(bg = '#0080e5'))
btn_convert.grid(row=0,column=1)

# ----- preparing and launching the program -----

input_file_entry.focus_set()
log_text.bind('<FocusOut>',lambda event : log_text.tag_remove('sel','1.0','end'))

window.mainloop()